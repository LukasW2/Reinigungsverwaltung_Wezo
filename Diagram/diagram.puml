@startuml

class CleaningTask <<aggregate>> {
  +taskId: int
  +description: string
  +status: string
  +points: int
  +Products: List<Products>
  +CleaningTask: List<CleaningTask>
  +Employee: List<Employee>
  +Zeitstempel: Zeitstempel
  --
  +CleaningTask(string description, string status, int points)
  +AddProducts((Products products)
  +RemoveProduct(Products products) 
  +AddEmployee(employee: Employee)
  +RemoveEmployee(employee: Employee)
  +EmployeeQuantity() : int 
  +ProductQuantity() : int
}

class DailyCleaningTask extends CleaningTask {
  +Priority: int
  --
  +DailyCleaningTask(int priority)
  +reviewHandIn() : bool
}

class WeeklyCleaningTask extends CleaningTask {
  +PreferredDay: string
  +Week: int
  +Year: int
  --
  +WeeklyCleaningTask(string preferredDay, int week, int year)
  +reviewHandIn() : bool
}

class Employee {
  +EmployeeId: int
  +Firstname: string
  +Lastname: string
  +Position: string
  +ActiveTasks: List<CleaningTask>
  --
  +Employee(string firstname, string lastname, string position)
  +getActiveTasks() : List<CleaningTask>
  +NameandInfos(): string 
}

class Zeitstempel <<value object>>{
    +date: DateTime
    +description: string?
    +duration: int
}


class Products {
  + Id: int
  + Name: string
  + Description: string
  + ExpirationDate: DateTime
  --
  + Products(string name, Description description, date ExpireDate)
}

class Room {
  +RoomNumber: int
  +Beds: int
  +IsSmoking: bool
  +CleaningTask: List<CleaningTask>
  --
  +Room(int beds, bool smoking, int points)
  +Points: int
  +AddCleaningTask(task: CleaningTask)
  +RemoveCleaningTask(CleaningTask task)
  +AddReservation(Reservation reserv)
  +removeReservation(Reservation reserv)
}

class Hotel <<aggregate>> {
  +Id: int
  +Guid: Guid
  +Name: string
  +Address: string
  +Rooms: List<Room>
  +Reservation: List<Reservation>
  --
  +Hotel(string n, string a)
  +AddRoom(Room r)
  +RemoveRoom(Room r)
  +RoomQuantity() : int
  +calculateAveragePoints() : int
  
}

class Guest {
  +GuestId: int
  +Firstname: string
  +Lastname: string
  +Address: string
  +Reservation: Reservation
  --
  +Guest(string firstname, string lastname, string address, DateTime birthday)
}

class Reservation {
  +reservationId: int
  +room: Room
  +checkInDate: DateTime
  +checkOutDate: DateTime
  +guest: Guest
  +Reservation: List<Reservation>
  --
  +Reservation(Room room, DateTime checkInDate, DateTime checkOutDate)
}

DailyCleaningTask *--> Zeitstempel
WeeklyCleaningTask *--> Zeitstempel

Employee *--> CleaningTask
Room --> DailyCleaningTask
Room --> WeeklyCleaningTask
Room *--> Hotel
Reservation <--* Guest
Reservation --> Room
Products *--> CleaningTask

@enduml